package <: $app :>::Web::Controller::<: $package :>;
use Moose;
use namespace::autoclean;

BEGIN { extends 'Catalyst::Controller' }

sub list : Local {
    my ($class, $c) = @_;
    $c->stash(<: $table :> => [$c->model('DB::<: $package :>')->all]);
}

sub create : Local {
    my ($class, $c) = @_;
    if($c->req->method eq 'POST'){
        # insert
        $c->model('DB::<: $package :>')->create(
            {
: for $cols -> $col {
                <: $col :> => $c->req->param('<: $col :>'),
: } # for
            },
        );
        $c->res->redirect($c->uri_for('/<: $table :>/list'));
        return;
    }
}

sub edit :Chained('/') :PathPart('<: $table :>/edit') :Args(1) {
    my ($class, $c, $key) = @_;
    if($c->req->method eq 'POST'){
        # update
        $c->model('DB::<: $package :>')->find($key)->update(
            {
: for $cols -> $col {
                <: $col :> => $c->req->param('<: $col :>'),
: } # for
            },
        );
        $c->res->redirect($c->uri_for('/<: $table :>/list'));
    }else{
        $c->stash(<: $table :> => $c->model('DB::<: $package :>')->find($key));
    }
}

sub delete :Chained('/') :PathPart('<: $table :>/delete') :Args(1) {
    my ($class, $c, $key) = @_;
    if($c->req->method eq 'POST'){
        # delete
        $c->model('DB::<: $package :>')->find($key)->delete;
        $c->res->redirect($c->uri_for('/<: $table :>/list'));
    }else{
        $c->stash(<: $table :> => $c->model('DB::<: $package :>')->find($key));
    }
}

__PACKAGE__->meta->make_immutable;

1;

